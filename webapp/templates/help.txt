REQUEST: /games/
RESPONSE: A JSON list of dictionaries. Each dictionary will represent a single board game, alphabetized by board game name.
Each board game dictionary will have the following fields.

ID -- (int) the id of the board_game
Name -- (string) the name of the board_game
Rank -- the database's rank of the game
Min_player -- (int) the minimum number of players 
Max_player -- (int) the max number of players 
Avg_time -- (int) the average time in minutes it takes to play a single game
Min_time -- (int) the min time in minutes it takes to play a single game
Max_time -- (int) the max time in minutes it takes to play a single game
avg_rating -- (int) the board_game’s average rating
num_votes -- (int) the number of users that have voted on this board_game’s rating
image url -- (text) the url of the picture of the board_game
min_age -- (int) minimum age needed to play the game
num_owned -- (int) how many users own this board_game
pub_year -- what year the game was published
complexity -- how difficult the game is to learn

This request can have many optional GET parameters, one for each column in the Board Game table.
For example: /games/?min_rating=4&name=”catan”
	          /games/?designer = ***** & titlecontains = “**”
	          /games/?designer   * sorts by designer alphabetically

Currently search is not rendering and can't do searches on any attribute except name of game